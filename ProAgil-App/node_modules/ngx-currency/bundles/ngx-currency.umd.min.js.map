{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-currency/src/currency-mask.config.ts","ng://ngx-currency/src/input.manager.ts","ng://ngx-currency/src/input.service.ts","ng://ngx-currency/src/input.handler.ts","ng://ngx-currency/src/currency-mask.directive.ts","ng://ngx-currency/src/currency-mask.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","CURRENCY_MASK_CONFIG","InjectionToken","InputManager","htmlInputElement","this","prototype","setCursorAt","position","setSelectionRange","focus","createTextRange","textRange","collapse","moveEnd","moveStart","select","updateValueAndCursor","newRawValue","oldLength","selectionStart","rawValue","haventReachedMaxLength","maxLength","inputSelection","selectionEnd","haveNumberSelected","value","substring","match","startWithZero","range","document","selection","createRange","parentElement","lenght","normalizedValue","replace","startRange","moveToBookmark","getBookmark","endRange","compareEndPoints","slice","split","_storedRawValue","InputService","options","PER_AR_NUMBER","Map","inputManager","initialize","set","addNumber","keyCode","keyChar","String","fromCharCode","updateFieldValue","applyMask","isNumber","_a","allowNegative","decimal","precision","prefix","suffix","thousands","min","nullable","max","onlyNumbers","Number","toFixed","integerPart","integerValue","parseInt","startsWith","decimalPart","decimalValue","isNegative","indexOf","isNullOrUndefined","Math","newValue","repeat","clearMask","isNullable","RegExp","forEach","val","re","parseFloat","changeToNegative","charAt","changeToPositive","removeNumber","move","substr","undefined","updateOptions","prefixLength","canInputMoreNumbers","storedRawValue","InputHandler","inputService","handleCut","event","_this","setTimeout","setValue","onModelChange","handleInput","charCodeAt","rawValueLength","rawValueSelectionEnd","storedRawValueLength","abs","setCursorPosition","handleKeydown","which","charCode","preventDefault","selectionRangeLength","clearValue","handleKeypress","ctrlKey","handlePaste","getOnModelChange","setOnModelChange","callbackFunction","getOnModelTouched","onModelTouched","setOnModelTouched","CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CurrencyMaskDirective","multi","currencyMaskConfig","elementRef","keyValueDiffers","optionsTemplate","align","allowZero","keyValueDiffer","find","create","ngAfterViewInit","nativeElement","style","textAlign","ngDoCheck","diff","inputHandler","assign","ngOnInit","handleBlur","apply","isChromeAndroid","test","navigator","userAgent","registerOnChange","registerOnTouched","setDisabledState","disabled","writeValue","Optional","type","Inject","args","ElementRef","KeyValueDiffers","tslib_1.__decorate","Input","HostListener","Directive","selector","providers","tslib_1.__param","NgxCurrencyModule","forRoot","config","ngModule","NgxCurrencyModule_1","useValue","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {InjectionToken} from \"@angular/core\";\n\nexport interface CurrencyMaskConfig {\n  align: string;\n  allowNegative: boolean;\n  allowZero: boolean;\n  decimal: string;\n  precision: number;\n  prefix: string;\n  suffix: string;\n  thousands: string;\n  nullable: boolean;\n  min?: number;\n  max?: number;\n}\n\nexport let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>(\"currency.mask.config\");\n","export class InputManager {\n\n    private _storedRawValue: string;\n\n    constructor(private htmlInputElement: any) {\n    }\n\n    setCursorAt(position: number): void {\n        if (this.htmlInputElement.setSelectionRange) {\n            this.htmlInputElement.focus();\n            this.htmlInputElement.setSelectionRange(position, position);\n        } else if (this.htmlInputElement.createTextRange) {\n            let textRange = this.htmlInputElement.createTextRange();\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", position);\n            textRange.moveStart(\"character\", position);\n            textRange.select();\n        }\n    }\n\n    updateValueAndCursor(newRawValue: string, oldLength: number, selectionStart: number): void {\n        this.rawValue = newRawValue;\n        let newLength = newRawValue.length;\n        selectionStart = selectionStart - (oldLength - newLength);\n        this.setCursorAt(selectionStart);\n    }\n\n    get canInputMoreNumbers(): boolean {\n        let haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let haveNumberSelected = !!(selectionStart != selectionEnd &&\n                                    this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/));\n        let startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\n        return haventReachedMaxLength || haveNumberSelected || startWithZero;\n    }\n\n    get inputSelection(): any {\n        let selectionStart = 0;\n        let selectionEnd = 0;\n\n        if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\n            selectionStart = this.htmlInputElement.selectionStart;\n            selectionEnd = this.htmlInputElement.selectionEnd;\n        } else {\n            let range = (<any>document).selection.createRange();\n\n            if (range && range.parentElement() == this.htmlInputElement) {\n                let lenght = this.htmlInputElement.value.length;\n                let normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\n                let startRange = this.htmlInputElement.createTextRange();\n                startRange.moveToBookmark(range.getBookmark());\n                let endRange = this.htmlInputElement.createTextRange();\n                endRange.collapse(false);\n\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                    selectionStart = selectionEnd = lenght;\n                } else {\n                    selectionStart = -startRange.moveStart(\"character\", -lenght);\n                    selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\n\n                    if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                        selectionEnd = lenght;\n                    } else {\n                        selectionEnd = -startRange.moveEnd(\"character\", -lenght);\n                        selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\n                    }\n                }\n            }\n        }\n\n        return {\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd\n        };\n    }\n\n    get rawValue(): string {\n        return this.htmlInputElement && this.htmlInputElement.value;\n    }\n\n    set rawValue(value: string) {\n        this._storedRawValue = value;\n\n        if (this.htmlInputElement) {\n            this.htmlInputElement.value = value;\n        }\n    }\n\n    get storedRawValue(): string {\n        return this._storedRawValue;\n    }\n}\n","import {InputManager} from \"./input.manager\";\nimport {CurrencyMaskConfig} from \"./currency-mask.config\";\n\n\nexport class InputService {\n    PER_AR_NUMBER: Map<string, string> = new Map<string, string>();\n\n    initialize() {\n        this.PER_AR_NUMBER.set(\"\\u06F0\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u06F1\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u06F2\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u06F3\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u06F4\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u06F5\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u06F6\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u06F7\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u06F8\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u06F9\", \"9\");\n\n        this.PER_AR_NUMBER.set(\"\\u0660\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u0661\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u0662\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u0663\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u0664\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u0665\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u0666\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u0667\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u0668\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u0669\", \"9\");\n    }\n\n    inputManager: InputManager;\n\n    constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {\n        this.inputManager = new InputManager(htmlInputElement);\n        this.initialize()\n    }\n\n    addNumber(keyCode: number): void {\n        let keyChar = String.fromCharCode(keyCode);\n\n        if (!this.rawValue) {\n            this.rawValue = this.applyMask(false, keyChar);\n            this.updateFieldValue();\n        } else {\n            let selectionStart = this.inputSelection.selectionStart;\n            let selectionEnd = this.inputSelection.selectionEnd;\n            this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);\n            this.updateFieldValue(selectionStart + 1);\n        }\n    }\n\n    applyMask(isNumber: boolean, rawValue: string): string {\n        let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable, min, max} = this.options;\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n        let onlyNumbers = rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g, \"\");\n\n        if (!onlyNumbers) {\n            return \"\";\n        }\n\n        let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)\n          .replace(/^\\u0660*/g, \"\")\n          .replace(/^\\u06F0*/g, \"\")\n          .replace(/^0*/g, \"\");\n\n        if (integerPart == \"\") {\n            integerPart = \"0\";\n        }\n        let integerValue = parseInt(integerPart);\n\n        integerPart = integerPart.replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g, thousands);\n        if (thousands && integerPart.startsWith(thousands)) {\n            integerPart = integerPart.substring(1);\n        }\n\n        let newRawValue = integerPart;\n        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n        let decimalValue = parseInt(decimalPart) || 0;\n\n        let isNegative = rawValue.indexOf(\"-\") > -1;\n\n        // Ensure max is at least as large as min.\n        max = (this.isNullOrUndefined(max) || this.isNullOrUndefined(min)) ? max : Math.max(max, min);\n\n        // Restrict to the min and max values.\n        let newValue = integerValue + (decimalValue / 100);\n        newValue = isNegative ? -newValue : newValue;\n        if (!this.isNullOrUndefined(max) && newValue > max) {\n            return this.applyMask(true, max + '');\n        } else if (!this.isNullOrUndefined(min) && newValue < min) {\n            return this.applyMask(true, min + '');\n        }\n\n        if (precision > 0) {\n            if (newRawValue == \"0\" && decimalPart.length < precision) {\n                newRawValue += decimal + \"0\".repeat(precision - 1) + decimalPart;\n            } else {\n                newRawValue += decimal + decimalPart;\n            }\n        }\n\n        let isZero = newValue == 0;\n        let operator = (isNegative && allowNegative && !isZero) ? \"-\" : \"\";\n        return operator + prefix + newRawValue + suffix;\n    }\n\n    clearMask(rawValue: string): number {\n        if (this.isNullable() && rawValue === \"\")\n            return null;\n\n        let value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n\n        if (this.options.thousands) {\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n        }\n\n        if (this.options.decimal) {\n            value = value.replace(this.options.decimal, \".\");\n        }\n\n        this.PER_AR_NUMBER.forEach((val: string, key: string) => {\n            const re = new RegExp(key, \"g\");\n            value = value.replace(re, val);\n        });\n        return parseFloat(value);\n    }\n\n    changeToNegative(): void {\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n            // Apply the mask to ensure the min and max values are enforced.\n            this.rawValue = this.applyMask(false, \"-\" + this.rawValue);\n        }\n    }\n\n    changeToPositive(): void {\n            // Apply the mask to ensure the min and max values are enforced.\n            this.rawValue = this.applyMask(false, this.rawValue.replace(\"-\", \"\"));\n    }\n\n    removeNumber(keyCode: number): void {\n        if (this.isNullable() && this.value == 0) {\n            this.rawValue = null;\n            return;\n        }\n\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let selectionStart = this.inputSelection.selectionStart;\n\n        if (selectionStart > this.rawValue.length - this.options.suffix.length) {\n            selectionEnd = this.rawValue.length - this.options.suffix.length;\n            selectionStart = this.rawValue.length - this.options.suffix.length;\n        }\n\n    let move = this.rawValue.substr(selectionStart - 1, 1).match(/\\d/) ? 0 : -1;\n    if ((\n          keyCode == 8 &&\n          selectionStart - 1 === 0 &&\n          !(this.rawValue.substr(selectionStart, 1).match(/\\d/))\n        ) ||\n        (\n          (keyCode == 46 || keyCode == 63272) &&\n          selectionStart === 0 &&\n          !(this.rawValue.substr(selectionStart + 1, 1).match(/\\d/))\n        )\n    ) {\n      move = 1;\n    };\n    selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;\n    selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;\n    this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);\n    this.updateFieldValue(selectionStart + move);\n  }\n\n    updateFieldValue(selectionStart?: number): void {\n        let newRawValue = this.applyMask(false, this.rawValue || \"\");\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n    }\n\n    updateOptions(options: any): void {\n        let value: number = this.value;\n        this.options = options;\n        this.value = value;\n    }\n\n    prefixLength(): any {\n        return this.options.prefix.length;\n    }\n\n    isNullable() {\n        return this.options.nullable;\n    }\n\n    get canInputMoreNumbers(): boolean {\n        return this.inputManager.canInputMoreNumbers;\n    }\n\n    get inputSelection(): any {\n        return this.inputManager.inputSelection;\n    }\n\n    get rawValue(): string {\n        return this.inputManager.rawValue;\n    }\n\n    set rawValue(value: string) {\n        this.inputManager.rawValue = value;\n    }\n\n    get storedRawValue(): string {\n        return this.inputManager.storedRawValue;\n    }\n\n    get value(): number {\n        return this.clearMask(this.rawValue);\n    }\n\n    set value(value: number) {\n        this.rawValue = this.applyMask(true, \"\" + value);\n    }\n\n    private isNullOrUndefined(value: any) {\n        return value === null || value === undefined;\n    }\n}\n","import {InputService} from \"./input.service\";\n\nexport class InputHandler {\n\n    private inputService: InputService;\n    private onModelChange: Function;\n    private onModelTouched: Function;\n\n    constructor(htmlInputElement: HTMLInputElement, options: any) {\n        this.inputService = new InputService(htmlInputElement, options);\n    }\n\n    handleCut(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 0);\n    }\n\n    handleInput(event: any): void {\n        let keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);\n        let rawValueLength = this.inputService.rawValue.length;\n        let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;\n        let storedRawValueLength = this.inputService.storedRawValue.length;\n        this.inputService.rawValue = this.inputService.storedRawValue;\n\n        if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {\n            this.setCursorPosition(event);\n            return;\n        }\n\n        if (rawValueLength < storedRawValueLength) {\n            this.inputService.removeNumber(8);\n        }\n\n        if (rawValueLength > storedRawValueLength) {\n            switch (keyCode) {\n                case 43:\n                    this.inputService.changeToPositive();\n                    break;\n                case 45:\n                    this.inputService.changeToNegative();\n                    break;\n                default:\n                    if (!this.inputService.canInputMoreNumbers) {\n                        return;\n                    }\n\n                    this.inputService.addNumber(keyCode);\n            }\n        }\n\n        this.setCursorPosition(event);\n        this.onModelChange(this.inputService.value);\n    }\n\n    handleKeydown(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\n            event.preventDefault();\n            let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n\n            if (selectionRangeLength == 0) {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n\n            if (selectionRangeLength >= (this.inputService.rawValue.length - this.inputService.prefixLength())) {\n                this.clearValue();\n            }\n        }\n    }\n\n    clearValue() {\n        this.setValue(this.inputService.isNullable() ? null : 0);\n        this.onModelChange(this.inputService.value);\n    }\n\n    handleKeypress(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n\n        if (keyCode === 97 && event.ctrlKey) {\n            return;\n        }\n\n        switch (keyCode) {\n            case undefined:\n            case 9:\n            case 13:\n            case 37:\n            case 39:\n                return;\n            case 43:\n                this.inputService.changeToPositive();\n                break;\n            case 45:\n                this.inputService.changeToNegative();\n                break;\n            default:\n                if (this.inputService.canInputMoreNumbers) {\n                    let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\n                        this.setValue(null);\n                    }\n\n                    this.inputService.addNumber(keyCode);\n                }\n        }\n\n        event.preventDefault();\n        this.onModelChange(this.inputService.value);\n    }\n\n    handlePaste(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 1);\n    }\n\n    updateOptions(options: any): void {\n        this.inputService.updateOptions(options);\n    }\n\n    getOnModelChange(): Function {\n        return this.onModelChange;\n    }\n\n    setOnModelChange(callbackFunction: Function): void {\n        this.onModelChange = callbackFunction;\n    }\n\n    getOnModelTouched(): Function {\n        return this.onModelTouched;\n    }\n\n    setOnModelTouched(callbackFunction: Function) {\n        this.onModelTouched = callbackFunction;\n    }\n\n    setValue(value: number): void {\n        this.inputService.value = value;\n    }\n\n    private setCursorPosition(event: any): void {\n        setTimeout(function () {\n            event.target.setSelectionRange(event.target.value.length, event.target.value.length);\n        }, 0);\n    }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  Input,\n  OnInit,\n  Optional\n} from \"@angular/core\";\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {CurrencyMaskConfig, CURRENCY_MASK_CONFIG} from \"./currency-mask.config\";\nimport {InputHandler} from \"./input.handler\";\n\nexport const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CurrencyMaskDirective),\n  multi: true,\n};\n\n@Directive({\n    selector: \"[currencyMask]\",\n    providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]\n})\nexport class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {\n\n  @Input() options: Partial<CurrencyMaskConfig> = {};\n\n  public inputHandler: InputHandler;\n  public keyValueDiffer: KeyValueDiffer<any, any>;\n\n  public optionsTemplate = {\n      align: \"right\",\n      allowNegative: true,\n      allowZero: true,\n      decimal: \".\",\n      precision: 2,\n      prefix: \"$ \",\n      suffix: \"\",\n      thousands: \",\",\n      nullable: false\n  };\n\n  constructor(@Optional() @Inject(CURRENCY_MASK_CONFIG) private currencyMaskConfig: CurrencyMaskConfig,\n                                                        private elementRef: ElementRef,\n                                                        private keyValueDiffers: KeyValueDiffers) {\n    if (currencyMaskConfig) {\n        this.optionsTemplate = currencyMaskConfig;\n    }\n\n    this.keyValueDiffer = keyValueDiffers.find({}).create();\n  }\n\n  ngAfterViewInit() {\n    this.elementRef.nativeElement.style.textAlign = this.options && this.options.align ? this.options.align : this.optionsTemplate.align;\n  }\n\n  ngDoCheck() {\n    if (this.keyValueDiffer.diff(this.options)) {\n      this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n      this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));\n    }\n  }\n\n  ngOnInit() {\n    this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));\n  }\n\n  @HostListener(\"blur\", [\"$event\"])\n  handleBlur(event: any) {\n    this.inputHandler.getOnModelTouched().apply(event);\n  }\n\n  @HostListener(\"cut\", [\"$event\"])\n  handleCut(event: any) {\n    if (!this.isChromeAndroid()) {\n      this.inputHandler.handleCut(event);\n    }\n  }\n\n  @HostListener(\"input\", [\"$event\"])\n  handleInput(event: any) {\n    if (this.isChromeAndroid()) {\n      this.inputHandler.handleInput(event);\n    }\n  }\n\n  @HostListener(\"keydown\", [\"$event\"])\n  handleKeydown(event: any) {\n    if (!this.isChromeAndroid()) {\n      this.inputHandler.handleKeydown(event);\n    }\n  }\n\n  @HostListener(\"keypress\", [\"$event\"])\n  handleKeypress(event: any) {\n    if (!this.isChromeAndroid()) {\n      this.inputHandler.handleKeypress(event);\n    }\n  }\n\n  @HostListener(\"paste\", [\"$event\"])\n  handlePaste(event: any) {\n    if (!this.isChromeAndroid()) {\n      this.inputHandler.handlePaste(event);\n    }\n  }\n\n  isChromeAndroid(): boolean {\n    return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\n  }\n\n  registerOnChange(callbackFunction: Function): void {\n    this.inputHandler.setOnModelChange(callbackFunction);\n  }\n\n  registerOnTouched(callbackFunction: Function): void {\n    this.inputHandler.setOnModelTouched(callbackFunction);\n  }\n\n  setDisabledState(value: boolean): void {\n    this.elementRef.nativeElement.disabled = value;\n  }\n\n  writeValue(value: number): void {\n    this.inputHandler.setValue(value);\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CurrencyMaskDirective} from \"./currency-mask.directive\";\nimport {CURRENCY_MASK_CONFIG, CurrencyMaskConfig} from \"./currency-mask.config\";\n\n@NgModule({\n  imports: [ CommonModule, FormsModule ],\n  declarations: [ CurrencyMaskDirective ],\n  exports: [ CurrencyMaskDirective ]\n})\nexport class NgxCurrencyModule {\n  static forRoot(config: CurrencyMaskConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxCurrencyModule,\n      providers: [{\n        provide: CURRENCY_MASK_CONFIG,\n        useValue: config,\n      }]\n    }\n  }\n}\n"]}